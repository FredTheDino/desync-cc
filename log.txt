guser908@tlvm-4-4-3:~/tddd17/project/desync$ python3 pyelf_test.py test_desync desyncpoint
Appended: desyncpoint1
Appended: desyncpoint0
Offset for symbol [desyncpoint1]: 0x58e
Offset for symbol [desyncpoint0]: 0x573
0x0:	nop	
0x1:	nop	
0x2:	call	0x122
0x7:	jmp	0xffffffffffffffec
0x9:	nop	word ptr [rax + rax]
0x12:	xor	ebp, ebp
0x14:	mov	r9, rdx
0x17:	pop	rsi
0x18:	mov	rdx, rsp
0x1b:	and	rsp, 0xfffffffffffffff0
0x1f:	push	rax
0x20:	push	rsp
0x21:	lea	r8, [rip + 0x18a]
0x28:	lea	rcx, [rip + 0x113]
Amount of correctly disassemled bytes: 47 :)
Trying junk byte: b'\x9d'
0x0:	nop	
0x1:	popfq	
0x2:	call	0x122
0x7:	jmp	0xffffffffffffffec
0x9:	nop	word ptr [rax + rax]
0x12:	xor	ebp, ebp
0x14:	mov	r9, rdx
0x17:	pop	rsi
0x18:	mov	rdx, rsp
0x1b:	and	rsp, 0xfffffffffffffff0
0x1f:	push	rax
0x20:	push	rsp
0x21:	lea	r8, [rip + 0x18a]
0x28:	lea	rcx, [rip + 0x113]
Amount of correctly disassemled bytes: 47 :)
Org_length: 47, Desync_length: 47
Trying junk byte: b'X'
0x0:	nop	
0x1:	pop	rax
0x2:	call	0x122
0x7:	jmp	0xffffffffffffffec
0x9:	nop	word ptr [rax + rax]
0x12:	xor	ebp, ebp
0x14:	mov	r9, rdx
0x17:	pop	rsi
0x18:	mov	rdx, rsp
0x1b:	and	rsp, 0xfffffffffffffff0
0x1f:	push	rax
0x20:	push	rsp
0x21:	lea	r8, [rip + 0x18a]
0x28:	lea	rcx, [rip + 0x113]
Amount of correctly disassemled bytes: 47 :)
Org_length: 47, Desync_length: 47
Trying junk byte: b'\xa3'
0x0:	nop	
0x1:	movabs	dword ptr [0x66e3eb0000011be8], eax
0xa:	nop	dword ptr [rax + rax]
0x12:	xor	ebp, ebp
0x14:	mov	r9, rdx
0x17:	pop	rsi
0x18:	mov	rdx, rsp
0x1b:	and	rsp, 0xfffffffffffffff0
0x1f:	push	rax
0x20:	push	rsp
0x21:	lea	r8, [rip + 0x18a]
0x28:	lea	rcx, [rip + 0x113]
Amount of correctly disassemled bytes: 47 :)
Org_length: 47, Desync_length: 47
guser908@tlvm-4-4-3:~/tddd17/project/desync$ 




------------------------------------------------------------------------
Konstig desync ---------------------------------------------------------
------------------------------------------------------------------------
--------------------
Desynchronizing point: desyncpoint0
--------------------
0x0:	nop	
0x1:	nop	
0x2:	call	0x13d
0x7:	xor	eax, eax
0x9:	add	rsp, 8
0xd:	ret	
0xe:	lea	rdi, [rip + 0x1db]
0x15:	xor	eax, eax
0x17:	cmp	eax, eax
0x19:	je	0x1d
0x1b:	nop	
0x1c:	mov	esi, 0x11be8
0x21:	add	bl, ch
0x23:	jrcxz	0x8b
0x25:	nop	dword ptr [rax + rax]
0x2d:	xor	ebp, ebp
0x2f:	mov	r9, rdx
Amount of correctly disassemled bytes: 50 :)
Trying junk byte: b']'
0x0:	nop	
0x1:	pop	rbp
0x2:	call	0x13d
0x7:	xor	eax, eax
0x9:	add	rsp, 8
0xd:	ret	
0xe:	lea	rdi, [rip + 0x1db]
0x15:	xor	eax, eax
0x17:	cmp	eax, eax
0x19:	je	0x1d
0x1b:	nop	
0x1c:	mov	esi, 0x11be8
0x21:	add	bl, ch
0x23:	jrcxz	0x8b
0x25:	nop	dword ptr [rax + rax]
0x2d:	xor	ebp, ebp
0x2f:	mov	r9, rdx
Amount of correctly disassemled bytes: 50 :)
Org_length: 50, Desync_length: 50
Trying junk byte: b'e'
0x0:	nop	
0x1:	call	0x13d
0x7:	xor	eax, eax
0x9:	add	rsp, 8
0xd:	ret	
0xe:	lea	rdi, [rip + 0x1db]
0x15:	xor	eax, eax
0x17:	cmp	eax, eax
0x19:	je	0x1d
0x1b:	nop	
0x1c:	mov	esi, 0x11be8
0x21:	add	bl, ch
0x23:	jrcxz	0x8b
0x25:	nop	dword ptr [rax + rax]
0x2d:	xor	ebp, ebp
0x2f:	mov	r9, rdx
Amount of correctly disassemled bytes: 50 :)

------------------------------------------------------------------------
(gdb) disass main
Dump of assembler code for function main:
   0x0000000000000560 <+0>:	sub    $0x8,%rsp
   0x0000000000000564 <+4>:	cmp    $0x1,%edi
   0x0000000000000567 <+7>:	je     0x581 <main+33>
   0x0000000000000569 <+9>:	mov    0x8(%rsi),%rdi
   0x000000000000056d <+13>:	xor    %eax,%eax
   0x000000000000056f <+15>:	cmp    %eax,%eax
   0x0000000000000571 <+17>:	je     0x575 <main+21>
   0x0000000000000573 <+19>:	nop
   0x0000000000000574 <+20>:	gs callq 0x6b0 <foo>
   0x000000000000057a <+26>:	xor    %eax,%eax
   0x000000000000057c <+28>:	add    $0x8,%rsp
   0x0000000000000580 <+32>:	retq   
   0x0000000000000581 <+33>:	lea    0x1db(%rip),%rdi        # 0x763
   0x0000000000000588 <+40>:	xor    %eax,%eax
   0x000000000000058a <+42>:	cmp    %eax,%eax
   0x000000000000058c <+44>:	je     0x590 <main+48>
   0x000000000000058e <+46>:	nop
   0x000000000000058f <+47>:	mov    $0x11be8,%esi
   0x0000000000000594 <+52>:	add    %ch,%bl
   0x0000000000000596 <+54>:	jrcxz  0x5fe <deregister_tm_clones+46>
End of assembler dump.
(gdb) 
